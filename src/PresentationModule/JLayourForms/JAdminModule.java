/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PresentationModule.JLayourForms;

import ApplicationHelper.Helper;
import BusinessModule.Campus;
import BusinessModule.Department;
import BusinessModule.Staff;
import BusinessModule.StationaryCategory;
import BusinessModule.StationaryStock;
import PresentationModule.BC_StationaryManagementSystem;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Neil
 */
public class JAdminModule extends javax.swing.JFrame
{

    private Staff selectedStaff;
    private StationaryStock selectedStock;
    private List<Staff> registerStaff = new ArrayList<>();
    private List<Staff> users = new ArrayList<>();
    private List<StationaryStock> stationaryStock = new ArrayList<>();
    private JPanel[] tabPanels;
    private int totalTabs;

    private List<StationaryCategory> categories = new ArrayList<>();

    /**
     * Creates new form AdminModule
     */
    public JAdminModule()
    {
        initComponents();

        LoadTab();
        LoadBoxCategory();
    }

    private void LoadBoxCategory()
    {
        categories = new StationaryCategory().ReadStationaryCategory();

        for (StationaryCategory categoryData : categories)
        {
            cmbInsertCatgory.addItem(categoryData.getName());
        }

        cmbInsertCatgory.setSelectedIndex(0);
    }

    private void LoadTab()
    {
        totalTabs = tpAdminControls.getComponentCount();
        tabPanels = new JPanel[totalTabs];
        try
        {
            for (int i = 0; i < totalTabs; i++)
            {
                JPanel singlePanel = ((JPanel) tpAdminControls.getComponent(0));
                tabPanels[i] = singlePanel;

                tpAdminControls.remove(0);
            }

        } catch (Exception ex)
        {
            Helper.DisplayError(ex.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpAdminControls = new javax.swing.JTabbedPane();
        pnlManageStaff = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblViewUsers = new javax.swing.JTable();
        btnViewUsersBack = new javax.swing.JButton();
        pnlUserRegistrationRequests = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRegisterRequests = new javax.swing.JTable();
        btnRegisterUserBack = new javax.swing.JButton();
        btnDeleteRegisterUser = new javax.swing.JButton();
        btnAcceptUser = new javax.swing.JButton();
        pnlViewAllStock = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAllStock = new javax.swing.JTable();
        btnViewAllStockBack = new javax.swing.JButton();
        btnPromptUpdate = new javax.swing.JButton();
        btnDeleteStock = new javax.swing.JButton();
        pnlInsertStock = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtInsertProductName = new javax.swing.JTextField();
        cmbInsertCatgory = new javax.swing.JComboBox<>();
        txtInsertModel = new javax.swing.JTextField();
        spnInsertQuantity = new javax.swing.JSpinner();
        txtInsertPrice = new javax.swing.JTextField();
        btnInsertStock = new javax.swing.JButton();
        btnBackFromInsertStock = new javax.swing.JButton();
        btnClearStock = new javax.swing.JButton();
        jmbAdminModule = new javax.swing.JMenuBar();
        jmAdminApplication = new javax.swing.JMenu();
        jmAdminLogout = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jmAdminClose = new javax.swing.JMenuItem();
        jmAccounts = new javax.swing.JMenu();
        jmManageRegisteredUsers = new javax.swing.JMenuItem();
        jmViewRegistrationRequests = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmManageStocks = new javax.swing.JMenu();
        jmManageAllStock = new javax.swing.JMenuItem();
        jmInserStock = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblViewUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Date", "Name", "Surname", "Campus Name", "Department Name", "Cell No", "Email", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblViewUsers.setName(""); // NOI18N
        jScrollPane2.setViewportView(tblViewUsers);

        btnViewUsersBack.setText("Back");
        btnViewUsersBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewUsersBackMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlManageStaffLayout = new javax.swing.GroupLayout(pnlManageStaff);
        pnlManageStaff.setLayout(pnlManageStaffLayout);
        pnlManageStaffLayout.setHorizontalGroup(
            pnlManageStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManageStaffLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManageStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(pnlManageStaffLayout.createSequentialGroup()
                        .addComponent(btnViewUsersBack)
                        .addGap(946, 946, 946)))
                .addContainerGap())
        );
        pnlManageStaffLayout.setVerticalGroup(
            pnlManageStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManageStaffLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(btnViewUsersBack)
                .addContainerGap())
        );

        tpAdminControls.addTab("Manage Staff", pnlManageStaff);

        tblRegisterRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Date", "Name", "Surname", "Campus Name", "Department Name", "Cell No", "Email", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRegisterRequests.setName(""); // NOI18N
        jScrollPane1.setViewportView(tblRegisterRequests);

        btnRegisterUserBack.setText("Back");
        btnRegisterUserBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegisterUserBackMouseClicked(evt);
            }
        });

        btnDeleteRegisterUser.setText("Delete User");
        btnDeleteRegisterUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteRegisterUserMouseClicked(evt);
            }
        });

        btnAcceptUser.setText("Accept User");
        btnAcceptUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAcceptUserMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlUserRegistrationRequestsLayout = new javax.swing.GroupLayout(pnlUserRegistrationRequests);
        pnlUserRegistrationRequests.setLayout(pnlUserRegistrationRequestsLayout);
        pnlUserRegistrationRequestsLayout.setHorizontalGroup(
            pnlUserRegistrationRequestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserRegistrationRequestsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUserRegistrationRequestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1005, Short.MAX_VALUE)
                    .addGroup(pnlUserRegistrationRequestsLayout.createSequentialGroup()
                        .addComponent(btnRegisterUserBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDeleteRegisterUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAcceptUser)))
                .addContainerGap())
        );
        pnlUserRegistrationRequestsLayout.setVerticalGroup(
            pnlUserRegistrationRequestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserRegistrationRequestsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(pnlUserRegistrationRequestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegisterUserBack)
                    .addComponent(btnAcceptUser)
                    .addComponent(btnDeleteRegisterUser))
                .addContainerGap())
        );

        tpAdminControls.addTab("User Registration Requests", pnlUserRegistrationRequests);
        pnlUserRegistrationRequests.getAccessibleContext().setAccessibleName("");

        tblAllStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stationary Stock ID", "Product Name", "Category Name", "Model", "Price", "Quantity", "Date Of Entry / Update"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblAllStock);

        btnViewAllStockBack.setLabel("Back");
        btnViewAllStockBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewAllStockBackMouseClicked(evt);
            }
        });

        btnPromptUpdate.setText("Update");
        btnPromptUpdate.setToolTipText("");
        btnPromptUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPromptUpdateMouseClicked(evt);
            }
        });

        btnDeleteStock.setText("Delete");
        btnDeleteStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteStockMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlViewAllStockLayout = new javax.swing.GroupLayout(pnlViewAllStock);
        pnlViewAllStock.setLayout(pnlViewAllStockLayout);
        pnlViewAllStockLayout.setHorizontalGroup(
            pnlViewAllStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewAllStockLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlViewAllStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1005, Short.MAX_VALUE)
                    .addGroup(pnlViewAllStockLayout.createSequentialGroup()
                        .addComponent(btnViewAllStockBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDeleteStock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPromptUpdate)))
                .addContainerGap())
        );
        pnlViewAllStockLayout.setVerticalGroup(
            pnlViewAllStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewAllStockLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addGroup(pnlViewAllStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewAllStockBack)
                    .addComponent(btnPromptUpdate)
                    .addComponent(btnDeleteStock))
                .addContainerGap())
        );

        tpAdminControls.addTab("Manage All Stock", pnlViewAllStock);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Stock Information"));

        jLabel1.setText("Product Name:");

        jLabel2.setText("Category Name:");

        jLabel3.setText("Model:");

        jLabel4.setText("Price:");

        jLabel5.setText("Quantity:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtInsertProductName))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbInsertCatgory, 0, 206, Short.MAX_VALUE)
                            .addComponent(txtInsertModel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spnInsertQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(txtInsertPrice))
                .addContainerGap(478, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(txtInsertProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInsertPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(cmbInsertCatgory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnInsertQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(txtInsertModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(123, Short.MAX_VALUE))
        );

        btnInsertStock.setText("Insert Stock");
        btnInsertStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInsertStockMouseClicked(evt);
            }
        });

        btnBackFromInsertStock.setText("Back");
        btnBackFromInsertStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBackFromInsertStockMouseClicked(evt);
            }
        });

        btnClearStock.setText("Clear");

        javax.swing.GroupLayout pnlInsertStockLayout = new javax.swing.GroupLayout(pnlInsertStock);
        pnlInsertStock.setLayout(pnlInsertStockLayout);
        pnlInsertStockLayout.setHorizontalGroup(
            pnlInsertStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInsertStockLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInsertStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInsertStockLayout.createSequentialGroup()
                        .addComponent(btnBackFromInsertStock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClearStock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnInsertStock)))
                .addContainerGap())
        );
        pnlInsertStockLayout.setVerticalGroup(
            pnlInsertStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInsertStockLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(pnlInsertStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsertStock)
                    .addComponent(btnBackFromInsertStock)
                    .addComponent(btnClearStock))
                .addContainerGap())
        );

        tpAdminControls.addTab("Insert Stock", pnlInsertStock);

        jmAdminApplication.setText("Application");

        jmAdminLogout.setText("Logout");
        jmAdminLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmAdminLogoutActionPerformed(evt);
            }
        });
        jmAdminApplication.add(jmAdminLogout);
        jmAdminApplication.add(jSeparator1);

        jmAdminClose.setText("Close");
        jmAdminClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmAdminCloseActionPerformed(evt);
            }
        });
        jmAdminApplication.add(jmAdminClose);

        jmbAdminModule.add(jmAdminApplication);

        jmAccounts.setText("Accounts");

        jmManageRegisteredUsers.setText("Manage Registered Users");
        jmManageRegisteredUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmManageRegisteredUsersActionPerformed(evt);
            }
        });
        jmAccounts.add(jmManageRegisteredUsers);

        jmViewRegistrationRequests.setText("View Registration Requests");
        jmViewRegistrationRequests.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmViewRegistrationRequestsActionPerformed(evt);
            }
        });
        jmAccounts.add(jmViewRegistrationRequests);

        jmbAdminModule.add(jmAccounts);

        jMenu2.setText("Stationary");

        jmManageStocks.setText("Manage Stocks");

        jmManageAllStock.setText("Manage All Stock");
        jmManageAllStock.setActionCommand("");
        jmManageAllStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmManageAllStockActionPerformed(evt);
            }
        });
        jmManageStocks.add(jmManageAllStock);
        jmManageAllStock.getAccessibleContext().setAccessibleName("Manage All Stock");

        jmInserStock.setText("Insert Stock");
        jmInserStock.setActionCommand("Insert New Stock");
        jmInserStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmInserStockActionPerformed(evt);
            }
        });
        jmManageStocks.add(jmInserStock);

        jMenu2.add(jmManageStocks);

        jmbAdminModule.add(jMenu2);

        setJMenuBar(jmbAdminModule);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tpAdminControls)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tpAdminControls, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void PopulateTableUsers()
    {
        try
        {
            users = new Staff().LoadUsers();

            DefaultTableModel model = (DefaultTableModel) tblViewUsers.getModel();

            for (Staff staffData : users)
            {
                Object[] o = new Object[9];
                o[0] = staffData.getStaffID();
                o[1] = staffData.getStaffName();
                o[2] = staffData.getStaffSurname();
                o[3] = new Campus().GetCampus(staffData.getStaffCampusID()).getCampusName();
                o[4] = new Department().GetDepartment(staffData.getStaffDepartment()).getDepartmentName();
                o[5] = staffData.getStaffCellNo();
                o[6] = staffData.getStaffEmail();
                o[7] = staffData.getStaffUsername();
                o[8] = staffData.getStaffPassword();
                model.addRow(o);
            }

            tblViewUsers.setModel(model);
        } catch (ArrayIndexOutOfBoundsException aiob)
        {
            Helper.DisplayError(aiob.toString());
        } catch (Exception ex)
        {
            Helper.DisplayError(ex.toString());
        }
    }

    private void PopulateTableRegister()
    {
        try
        {
            registerStaff = new Staff().LoadRegisterRequests();

            DefaultTableModel model = (DefaultTableModel) tblRegisterRequests.getModel();

            for (Staff staffData : registerStaff)
            {
                Object[] o = new Object[9];
                o[0] = staffData.getRegisterRequestDate();
                o[1] = staffData.getStaffName();
                o[2] = staffData.getStaffSurname();
                o[3] = new Campus().GetCampus(staffData.getStaffCampusID()).getCampusName();
                o[4] = new Department().GetDepartment(staffData.getStaffDepartment()).getDepartmentName();
                o[5] = staffData.getStaffCellNo();
                o[6] = staffData.getStaffEmail();
                o[7] = staffData.getStaffUsername();
                o[8] = staffData.getStaffPassword();
                model.addRow(o);
            }

            tblRegisterRequests.setModel(model);
        } catch (ArrayIndexOutOfBoundsException aiob)
        {
            Helper.DisplayError(aiob.toString());
        } catch (Exception ex)
        {
            Helper.DisplayError(ex.toString());
        }
    }

    private void PopulateTableAllStock()
    {
        try
        {
            stationaryStock = new StationaryStock().LoadStationaryStock();

            DefaultTableModel model = (DefaultTableModel) tblAllStock.getModel();

            for (StationaryStock stockData : stationaryStock)
            {
                Object[] o = new Object[9];
                o[0] = stockData.getStationaryStockID();
                o[1] = stockData.getProductName();
                o[2] = new StationaryCategory().GetStationaryCategory(stockData.getStationaryCategoryID()).getName();
                o[3] = stockData.getModel();
                o[4] = stockData.getPrice();
                o[5] = stockData.getQuantity();
                o[6] = stockData.getDateOfEntryUpdate();
                model.addRow(o);
            }

            tblAllStock.setModel(model);
        } catch (ArrayIndexOutOfBoundsException aiob)
        {
            Helper.DisplayError(aiob.toString());
        } catch (Exception ex)
        {
            Helper.DisplayError(ex.toString());
        }
    }

    private void jmAdminCloseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jmAdminCloseActionPerformed
    {//GEN-HEADEREND:event_jmAdminCloseActionPerformed
        int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to close this application?", "User Confirmation", JOptionPane.YES_NO_OPTION);

        if (choice == JOptionPane.YES_OPTION)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_jmAdminCloseActionPerformed

    private void jmAdminLogoutActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jmAdminLogoutActionPerformed
    {//GEN-HEADEREND:event_jmAdminLogoutActionPerformed
        int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to logout?", "User Confirmation", JOptionPane.YES_NO_OPTION);

        if (choice == JOptionPane.YES_OPTION)
        {
            dispose();
            new Thread(new BC_StationaryManagementSystem()).start();
        }
    }//GEN-LAST:event_jmAdminLogoutActionPerformed

    private void jmViewRegistrationRequestsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jmViewRegistrationRequestsActionPerformed
    {//GEN-HEADEREND:event_jmViewRegistrationRequestsActionPerformed
        try
        {
            if (!tpAdminControls.getSelectedComponent().equals(tabPanels[1]))
            {
                tpAdminControls.addTab("User Registration Requests", tabPanels[1]);
                tpAdminControls.setSelectedIndex(tpAdminControls.getComponentCount() - 1);
                PopulateTableRegister();
            }
        } catch (NullPointerException npe)
        {
            tpAdminControls.addTab("User Registration Requests", tabPanels[1]);
            tpAdminControls.setSelectedIndex(tpAdminControls.getComponentCount() - 1);
            PopulateTableRegister();
        }
    }//GEN-LAST:event_jmViewRegistrationRequestsActionPerformed

    private void btnRegisterUserBackMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_btnRegisterUserBackMouseClicked
    {//GEN-HEADEREND:event_btnRegisterUserBackMouseClicked
        DefaultTableModel model = (DefaultTableModel) tblRegisterRequests.getModel();
        model.setRowCount(0);
        tpAdminControls.remove(tabPanels[1]);
    }//GEN-LAST:event_btnRegisterUserBackMouseClicked

    private void SelectRowStock()
    {
        try
        {
            for (StationaryStock stock : stationaryStock) {
                if (tblAllStock.getValueAt(tblAllStock.getSelectedRow(), 0).toString().equals(stock.getStationaryStockID()))
                {
                    selectedStock = stock;              
                }
                else
                {
                    Helper.DisplayError("An Error Occoured When Selecting Active Row");
                }
            }
        }
        catch (ArrayIndexOutOfBoundsException aiob)
        {
            Helper.DisplayError("Please Select A Row First before Making a selection");
        }   
    }
    private void SelectRowRegister()
    {
        try
        {
            for (Staff staff : registerStaff)
            {
                if (tblRegisterRequests.getValueAt(tblRegisterRequests.getSelectedRow(), 7).toString().equals(staff.getStaffUsername()))
                {
                    selectedStaff = staff;
                } else
                {
                    Helper.DisplayError("An Error Occoured When Selecting Active Row");
                }
            }
        } catch (ArrayIndexOutOfBoundsException aiob)
        {
            Helper.DisplayError("Please Select A Row First before Making a selection");
        }      
    }
    private void btnAcceptUserMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_btnAcceptUserMouseClicked
    {//GEN-HEADEREND:event_btnAcceptUserMouseClicked
        try
        {
            selectedStaff.InsertStaff();
            registerStaff.remove(selectedStaff);
            tblRegisterRequests.setModel(new DefaultTableModel());
            PopulateTableRegister();
            JOptionPane.showConfirmDialog(this, "User succesfully Accepted", "Registration Completed", JOptionPane.DEFAULT_OPTION);
        }
        catch (NullPointerException npe)
        {
            Helper.DisplayError("There is no data currently available in the table");
        }
    }//GEN-LAST:event_btnAcceptUserMouseClicked

    private void btnDeleteRegisterUserMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_btnDeleteRegisterUserMouseClicked
    {//GEN-HEADEREND:event_btnDeleteRegisterUserMouseClicked
        try
        {
            SelectRowRegister();
            selectedStaff.DeleteRegistry();
            registerStaff.remove(selectedStaff);
            
            DefaultTableModel model = (DefaultTableModel) tblRegisterRequests.getModel();
            model.setRowCount(0);
            
            PopulateTableRegister();
            JOptionPane.showConfirmDialog(this, "User succesfully Removed", "Registration Completed", JOptionPane.DEFAULT_OPTION);
        }
        catch (NullPointerException npe)
        {
            Helper.DisplayError("There is no data currently available in the table");
        }
    }//GEN-LAST:event_btnDeleteRegisterUserMouseClicked

    private void btnViewUsersBackMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_btnViewUsersBackMouseClicked
    {//GEN-HEADEREND:event_btnViewUsersBackMouseClicked
        DefaultTableModel model = (DefaultTableModel) tblViewUsers.getModel();
        model.setRowCount(0);
        tpAdminControls.remove(tabPanels[0]);
    }//GEN-LAST:event_btnViewUsersBackMouseClicked

    private void jmManageRegisteredUsersActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jmManageRegisteredUsersActionPerformed
    {//GEN-HEADEREND:event_jmManageRegisteredUsersActionPerformed
        try
        {
            if (!tpAdminControls.getSelectedComponent().equals(tabPanels[0]))
            {
                tpAdminControls.addTab("Manage Staff", tabPanels[0]);
                tpAdminControls.setSelectedIndex(tpAdminControls.getComponentCount() - 1);
                PopulateTableUsers();
            }
        } catch (NullPointerException npe)
        {
            tpAdminControls.addTab("Manage Staff", tabPanels[0]);
            tpAdminControls.setSelectedIndex(tpAdminControls.getComponentCount() - 1);
            PopulateTableUsers();
        }
    }//GEN-LAST:event_jmManageRegisteredUsersActionPerformed

    private void jmManageAllStockActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jmManageAllStockActionPerformed
    {//GEN-HEADEREND:event_jmManageAllStockActionPerformed
        try
        {
            if (!tpAdminControls.getSelectedComponent().equals(tabPanels[2]))
            {
                tpAdminControls.addTab("Manage All Stock", tabPanels[2]);
                tpAdminControls.setSelectedIndex(tpAdminControls.getComponentCount() - 1);
                PopulateTableAllStock();
            }
        } catch (NullPointerException npe)
        {
            tpAdminControls.addTab("Manage All Stock", tabPanels[2]);
            tpAdminControls.setSelectedIndex(tpAdminControls.getComponentCount() - 1);
            PopulateTableAllStock();
        }
    }//GEN-LAST:event_jmManageAllStockActionPerformed

    private void btnViewAllStockBackMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_btnViewAllStockBackMouseClicked
    {//GEN-HEADEREND:event_btnViewAllStockBackMouseClicked
        DefaultTableModel model = (DefaultTableModel) tblAllStock.getModel();
        model.setRowCount(0);
        tpAdminControls.remove(tabPanels[2]);
    }//GEN-LAST:event_btnViewAllStockBackMouseClicked

    private void btnBackFromInsertStockMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_btnBackFromInsertStockMouseClicked
    {//GEN-HEADEREND:event_btnBackFromInsertStockMouseClicked
        tpAdminControls.remove(tabPanels[3]);
    }//GEN-LAST:event_btnBackFromInsertStockMouseClicked

    private void btnInsertStockMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_btnInsertStockMouseClicked
    {//GEN-HEADEREND:event_btnInsertStockMouseClicked
        boolean validInput = false;
        String productName, category, model, price, quantity;

        productName = txtInsertProductName.getText();
        category = cmbInsertCatgory.getSelectedItem().toString();
        model = txtInsertModel.getText();
        price = txtInsertPrice.getText();
        quantity = spnInsertQuantity.getValue().toString();

        try
        {
            Validation val = new Validation();
            validInput = val.ValidateStockEntry(productName, category, model, price, quantity);
            int categoryID = 0;

            if (validInput)
            {
                for (StationaryCategory categoryData : categories)
                {
                    if (categoryData.getName().equals(category))
                    {
                        categoryID = categoryData.getStationaryCategoryID();
                    }

                }
                if (categoryID != 0)
                {
                    StationaryStock statStock = new StationaryStock(productName, categoryID, model, Double.parseDouble(price), Integer.parseInt(quantity));
                    statStock.InsertStationaryStock();
                    JOptionPane.showConfirmDialog(this, "Sucesfully Added!", "Input Recieved", JOptionPane.DEFAULT_OPTION);

                    tpAdminControls.remove(tabPanels[3]);
                } else
                {
                    throw new Exception("Error in ID set for field!");
                }
            } else
            {
                ResetInsertForm();
            }
        } catch (Exception ex)
        {
            Helper.DisplayError(ex.toString());
        }
    }//GEN-LAST:event_btnInsertStockMouseClicked

    private void jmInserStockActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jmInserStockActionPerformed
    {//GEN-HEADEREND:event_jmInserStockActionPerformed
        try
        {
            if (!tpAdminControls.getSelectedComponent().equals(tabPanels[3]))
            {
                tpAdminControls.addTab("Insert Stock", tabPanels[3]);
                tpAdminControls.setSelectedIndex(tpAdminControls.getComponentCount() - 1);
                PopulateTableAllStock();
            }
        } catch (NullPointerException npe)
        {
            tpAdminControls.addTab("Insert Stock", tabPanels[3]);
            tpAdminControls.setSelectedIndex(tpAdminControls.getComponentCount() - 1);
            PopulateTableAllStock();
        }
    }//GEN-LAST:event_jmInserStockActionPerformed

    private void btnDeleteStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteStockMouseClicked
        try
        {
            SelectRowStock();
            selectedStock.DeleteRegistry();
            registerStaff.remove(selectedStaff);
            
            DefaultTableModel model = (DefaultTableModel) tblRegisterRequests.getModel();
            model.setRowCount(0);
            
            PopulateTableRegister();
            JOptionPane.showConfirmDialog(this, "User succesfully Removed", "Registration Completed", JOptionPane.DEFAULT_OPTION);
        }
        catch (NullPointerException npe)
        {
            Helper.DisplayError("There is no data currently available in the table");
        }
    }//GEN-LAST:event_btnDeleteStockMouseClicked

    private void btnPromptUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPromptUpdateMouseClicked
        
    }//GEN-LAST:event_btnPromptUpdateMouseClicked

    private void ResetInsertForm()
    {
        txtInsertProductName.setText("");
        txtInsertModel.setText("");
        txtInsertPrice.setText("");
        cmbInsertCatgory.setSelectedIndex(0);
        spnInsertQuantity.setValue(0);
    }

    /**
     * @param args the command line arguments
     */
    public void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(JAdminModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(JAdminModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(JAdminModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(JAdminModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new JAdminModule().setVisible(true);

                tblRegisterRequests.getModel().addTableModelListener(new TableModelListener()
                {
                    @Override
                    public void tableChanged(TableModelEvent e)
                    {
                        for (Staff staff : registerStaff)
                        {
                            if (tblRegisterRequests.getValueAt(e.getFirstRow(), 7).toString().equals(staff.getStaffUsername()))
                            {
                                selectedStaff = staff;
                                System.out.println(selectedStaff.toString());
                            }
                        }
                    }
                });
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptUser;
    private javax.swing.JButton btnBackFromInsertStock;
    private javax.swing.JButton btnClearStock;
    private javax.swing.JButton btnDeleteRegisterUser;
    private javax.swing.JButton btnDeleteStock;
    private javax.swing.JButton btnInsertStock;
    private javax.swing.JButton btnPromptUpdate;
    private javax.swing.JButton btnRegisterUserBack;
    private javax.swing.JButton btnViewAllStockBack;
    private javax.swing.JButton btnViewUsersBack;
    private javax.swing.JComboBox<String> cmbInsertCatgory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu jmAccounts;
    private javax.swing.JMenu jmAdminApplication;
    private javax.swing.JMenuItem jmAdminClose;
    private javax.swing.JMenuItem jmAdminLogout;
    private javax.swing.JMenuItem jmInserStock;
    private javax.swing.JMenuItem jmManageAllStock;
    private javax.swing.JMenuItem jmManageRegisteredUsers;
    private javax.swing.JMenu jmManageStocks;
    private javax.swing.JMenuItem jmViewRegistrationRequests;
    private javax.swing.JMenuBar jmbAdminModule;
    private javax.swing.JPanel pnlInsertStock;
    private javax.swing.JPanel pnlManageStaff;
    private javax.swing.JPanel pnlUserRegistrationRequests;
    private javax.swing.JPanel pnlViewAllStock;
    private javax.swing.JSpinner spnInsertQuantity;
    private javax.swing.JTable tblAllStock;
    private javax.swing.JTable tblRegisterRequests;
    private javax.swing.JTable tblViewUsers;
    private javax.swing.JTabbedPane tpAdminControls;
    private javax.swing.JTextField txtInsertModel;
    private javax.swing.JTextField txtInsertPrice;
    private javax.swing.JTextField txtInsertProductName;
    // End of variables declaration//GEN-END:variables
}
